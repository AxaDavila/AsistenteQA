# QA Assistant ‚Äì Asistente virtual de pruebas de software

Un **FastAPI** con especificaci√≥n OpenAPI que act√∫a como un asistente de QA, capaz de:
- Responder preguntas sobre pruebas, DevOps y seguridad con ChatGPT o Llama‚ÄëOSS 20B.
- Simular pruebas de p√°ginas web con pasos definidos.

## üöÄ Instalaci√≥n

```bash
git clone https://github.com/tu_usuario/qa-assistant.git
cd qa-assistant
python -m venv .venv
source .venv/bin/activate   # Windows: .venv\Scripts\activate
pip install -r requirements.txt

1Ô∏è‚É£‚ÄØDescarga el modelo correcto con token de Ollama

Crea una cuenta HuggingFace ‚Üí Settings ‚Üí Access Tokens ‚Üí New Token ‚Üí scope‚ÄØread. Copia el token (ej. hf_XYZ...).
Descarga el fichero de forma autenticada:
Opci√≥n A ‚Äì‚ÄØcurl
export HF_TOKEN="hf_XYZ..."          # ‚Üê el token que acabas de crear

curl -H "Authorization: Bearer $HF_TOKEN" \
     -L -o ./ollama/models/llama2.3b.bin \
     https://huggingface.co/TheBloke/Llama-2-3b/resolve/main/Llama-2-3b.ggmlv3.q5_0.bin

Opci√≥n B ‚Äì‚ÄØhuggingface-cli
pip install -U huggingface-hub
huggingface-cli download TheBloke/Llama-2-3b \
     --local-dir ./ollama/models --force
# el archivo se colocar√° con el

##  Pr√≥ximos pasos (road‚Äëmap)

| Tarea | Descripci√≥n | Estimaci√≥n |
|-------|-------------|------------|
| Integrar Playwright | Reemplazar la simulaci√≥n de `run_web_test` con pruebas reales. | 1‚Äë2 d√≠as |
| Caching de respuestas | Usar Redis para almacenar respuestas frecuentes. | 1 d√≠a |
| Seguridad | A√±adir autenticaci√≥n JWT, l√≠mites de tasa. | 2‚Äë3 d√≠as |
| CI/CD | GitHub Actions que prueben y desplieguen a Heroku o Azure. | 2 d√≠as |
| UI front‚Äëend | React/Next.js que consuma la API y muestre un chat. | 5‚Äë7 d√≠as |

---
